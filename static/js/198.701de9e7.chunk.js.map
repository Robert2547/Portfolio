{"version":3,"file":"static/js/198.701de9e7.chunk.js","mappings":"kKAGA,MA6EA,EA7EiBA,KA6BbC,EAAAA,EAAAA,KAAA,WAASC,GAAG,WAAWC,UAAU,QAAOC,UACtCC,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,GACpBC,YAAa,CAAED,QAAS,GACxBE,WAAY,CAAEC,SAAU,IACxBT,UAAU,yBAAwBC,SAAA,EAElCH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,uCAAsCC,SAAC,uBAGrDH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wCAAuCC,SAtC3C,CACf,CACES,MAAO,8BACPC,YACE,8JACFC,aAAc,CACZ,8GACA,+HACA,wLAEFC,KAAM,CAAC,QAAS,aAAc,SAAU,UAAW,QAAS,QAC5DC,KAAM,KAER,CACEJ,MAAO,eACPC,YACE,4IACFC,aAAc,CACZ,iHACA,qJACA,uIAEFC,KAAM,CAAC,aAAc,SAAU,SAAU,QAAS,WAAY,UAC9DC,KAAM,MAgBQC,KAAI,CAACC,EAASC,KACtBf,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGY,EAAG,IAC1BX,YAAa,CAAED,QAAS,EAAGY,EAAG,GAC9BV,WAAY,CAAEW,MAAe,GAARF,GACrBjB,UAAU,wHAAuHC,SAAA,EAEjIH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,uCAAsCC,SACjDe,EAAQN,SAEXZ,EAAAA,EAAAA,KAAA,KAAGE,UAAU,qBAAoBC,SAAEe,EAAQL,eAC3Cb,EAAAA,EAAAA,KAAA,MAAIE,UAAU,2CAA0CC,SACrDe,EAAQJ,aAAaG,KAAI,CAACK,EAAaC,KACtCvB,EAAAA,EAAAA,KAAA,MAAYE,UAAU,OAAMC,SACzBmB,GADMC,QAKbvB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,4BAA2BC,SACvCe,EAAQH,KAAKE,KAAI,CAACF,EAAMQ,KACvBvB,EAAAA,EAAAA,KAAA,QAEEE,UAAU,4DAA2DC,SAEpEY,GAHIQ,SApBNJ,W","sources":["components/sections/Projects.jsx"],"sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Projects = () => {\n  const projects = [\n    {\n      title: \"Summarizer Chrome Extension\",\n      description:\n        \"Built a Chrome extension leveraging Natural Language Pr ocessing (NLP) to summarize web articles and text, enhancing\\n reading efficiency across platforms.\",\n      achievements: [\n        \"Led a team of 3 developers to win the Microsoft & RBC Challenge among 800+ participants at UCF's hackathon.\",\n        \"Designed and maintained a CI/CD pipeline with GitHub Actions , achieving 85% automated test coverage for\\n backend services.\",\n        \"Architected a parallel streaming summarization system , reducing content processing latency by 60% compared to\\n synchronous models.Maintained 85% test coverage with CI/CD pipeline\"\n      ],\n      tech: [\"React\", \"TypeScript\", \"Python\", \"FastAPI\", \"Redis\", \"Jest\"],\n      link: \"#\",\n    },\n    {\n      title: \"Handy Dollar\",\n      description:\n        \"Developed a full-stack financial management platform that streamlined expense tracking and receipt parsing through AI-powered automation.\",\n      achievements: [\n        \"Collaborated with a team of 3 engineers to win Google's Challenge at FIU ShellHacks among 1,200+ participants.\",\n        \"Integrated the Plaid API to securely aggregate real-time financial data from 10+ banks, \\nensuring unified and privacy-compliant expense tracking.\",\n        \"Built a computer vision pipeline using Azure AI and OpenAI,\\n achieving 95% receipt parsing accuracy for automated data extraction.\"\n      ],\n      tech: [\"TypeScript\", \"NextJS\", \"NodeJS\", \"Kafka\", \"Azure AI\", \"OpenAI\"],\n      link: \"#\",\n    },\n  ];\n\n  return (\n    <section id=\"projects\" className=\"py-20\">\n      <motion.div\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        transition={{ duration: 0.8 }}\n        className=\"container mx-auto px-4\"\n      >\n        <h2 className=\"text-4xl font-bold mb-16 text-center\">\n          Featured Projects\n        </h2>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {projects.map((project, index) => (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.2 }}\n              className=\"bg-background-light/30 backdrop-blur-md rounded-lg p-6 hover:transform hover:scale-[1.02] transition-all duration-300\"\n            >\n              <h3 className=\"text-2xl font-bold mb-4 text-primary\">\n                {project.title}\n              </h3>\n              <p className=\"text-gray-300 mb-4\">{project.description}</p>\n              <ul className=\"list-disc list-inside mb-4 text-gray-400\">\n                {project.achievements.map((achievement, i) => (\n                  <li key={i} className=\"mb-2\">\n                    {achievement}\n                  </li>\n                ))}\n              </ul>\n              <div className=\"flex flex-wrap gap-2 mb-4\">\n                {project.tech.map((tech, i) => (\n                  <span\n                    key={i}\n                    className=\"bg-primary/10 text-primary px-3 py-1 rounded-full text-sm\"\n                  >\n                    {tech}\n                  </span>\n                ))}\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </motion.div>\n    </section>\n  );\n};\n\nexport default Projects;\n"],"names":["Projects","_jsx","id","className","children","_jsxs","motion","div","initial","opacity","whileInView","transition","duration","title","description","achievements","tech","link","map","project","index","y","delay","achievement","i"],"sourceRoot":""}