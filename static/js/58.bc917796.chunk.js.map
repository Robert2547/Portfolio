{"version":3,"file":"static/js/58.bc917796.chunk.js","mappings":"uKAGA,MAwIA,EAxIgBA,KACd,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,QAAS,MAGJC,EAAcC,IAAmBL,EAAAA,EAAAA,WAAS,IAC1CM,EAAcC,IAAmBP,EAAAA,EAAAA,UAAS,MAE3CQ,EAAgBC,IACpBV,GAAWW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRZ,GAAQ,IACX,CAACW,EAAEE,OAAOV,MAAOQ,EAAEE,OAAOC,QAC1B,EAmBJ,OACEC,EAAAA,EAAAA,KAAA,WAASC,GAAG,UAAUC,UAAU,QAAOC,UACrCH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,GACpBC,YAAa,CAAED,QAAS,GACxBE,WAAY,CAAEC,SAAU,IACxBT,UAAU,oBAAmBC,SAAA,EAE7BH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,uCAAsCC,SAAC,kBAErDC,EAAAA,EAAAA,MAAA,QAAMQ,SA3BOC,UACnBjB,EAAEkB,iBACFtB,GAAgB,GAGhB,UACQ,IAAIuB,SAASC,GAAYC,WAAWD,EAAS,OACnDtB,EAAgB,WAChBR,EAAY,CAAEE,KAAM,GAAIC,MAAO,GAAIC,QAAS,IAC9C,CAAE,MAAO4B,GACPxB,EAAgB,QAClB,CAEAF,GAAgB,EAAM,EAccU,UAAU,YAAWC,SAAA,EACjDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,OAAOjB,UAAU,2BAA0BC,SAAC,UAG3DH,EAAAA,EAAAA,KAAA,SACEoB,KAAK,OACLnB,GAAG,OACHb,KAAK,OACLW,MAAOd,EAASG,KAChBiC,SAAU1B,EACV2B,UAAQ,EACRpB,UAAU,wJAKdE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,QAAQjB,UAAU,2BAA0BC,SAAC,WAG5DH,EAAAA,EAAAA,KAAA,SACEoB,KAAK,QACLnB,GAAG,QACHb,KAAK,QACLW,MAAOd,EAASI,MAChBgC,SAAU1B,EACV2B,UAAQ,EACRpB,UAAU,wJAKdE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,UAAUjB,UAAU,2BAA0BC,SAAC,aAG9DH,EAAAA,EAAAA,KAAA,YACEC,GAAG,UACHb,KAAK,UACLW,MAAOd,EAASK,QAChB+B,SAAU1B,EACV2B,UAAQ,EACRC,KAAK,IACLrB,UAAU,wJAKdF,EAAAA,EAAAA,KAACK,EAAAA,EAAOmB,OAAM,CACZJ,KAAK,SACLK,SAAUlC,EACVW,UAAS,2EAAAwB,OAEEnC,EACI,cACA,iCAAgC,6BAAAmC,OAEnB,YAAjBjC,EAA6B,eAAiB,GAAE,6BAAAiC,OAC/B,UAAjBjC,EAA2B,aAAe,IACrDkC,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,KAAOzB,SAEzBZ,EAAe,aAAe,iBAGf,YAAjBE,IACCO,EAAAA,EAAAA,KAACK,EAAAA,EAAOyB,EAAC,CACPvB,QAAS,CAAEC,QAAS,GACpBuB,QAAS,CAAEvB,QAAS,GACpBN,UAAU,kCAAiCC,SAC5C,+BAKe,UAAjBV,IACCO,EAAAA,EAAAA,KAACK,EAAAA,EAAOyB,EAAC,CACPvB,QAAS,CAAEC,QAAS,GACpBuB,QAAS,CAAEvB,QAAS,GACpBN,UAAU,gCAA+BC,SAC1C,uDAOD,C","sources":["components/sections/Contact.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState(null);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    // Simulate form submission\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n      setSubmitStatus(\"success\");\n      setFormData({ name: \"\", email: \"\", message: \"\" });\n    } catch (error) {\n      setSubmitStatus(\"error\");\n    }\n\n    setIsSubmitting(false);\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-20\">\n      <div className=\"container mx-auto px-4\">\n        <motion.div\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          transition={{ duration: 0.8 }}\n          className=\"max-w-2xl mx-auto\"\n        >\n          <h2 className=\"text-4xl font-bold mb-16 text-center\">Get In Touch</h2>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"name\" className=\"block text-gray-300 mb-2\">\n                Name\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n                required\n                className=\"w-full px-4 py-3 rounded-lg bg-background-light border border-gray-700 \n                         text-gray-300 focus:outline-none focus:border-primary transition-colors\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-gray-300 mb-2\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n                className=\"w-full px-4 py-3 rounded-lg bg-background-light border border-gray-700 \n                         text-gray-300 focus:outline-none focus:border-primary transition-colors\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"message\" className=\"block text-gray-300 mb-2\">\n                Message\n              </label>\n              <textarea\n                id=\"message\"\n                name=\"message\"\n                value={formData.message}\n                onChange={handleChange}\n                required\n                rows=\"5\"\n                className=\"w-full px-4 py-3 rounded-lg bg-background-light border border-gray-700 \n                         text-gray-300 focus:outline-none focus:border-primary transition-colors\"\n              />\n            </div>\n\n            <motion.button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={`w-full py-3 rounded-lg font-bold transition-all\n                       ${\n                         isSubmitting\n                           ? \"bg-gray-600\"\n                           : \"bg-primary hover:bg-primary/90\"\n                       }\n                       ${submitStatus === \"success\" ? \"bg-green-500\" : \"\"}\n                       ${submitStatus === \"error\" ? \"bg-red-500\" : \"\"}`}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              {isSubmitting ? \"Sending...\" : \"Send Message\"}\n            </motion.button>\n\n            {submitStatus === \"success\" && (\n              <motion.p\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                className=\"text-green-500 text-center mt-4\"\n              >\n                Message sent successfully!\n              </motion.p>\n            )}\n\n            {submitStatus === \"error\" && (\n              <motion.p\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                className=\"text-red-500 text-center mt-4\"\n              >\n                Failed to send message. Please try again.\n              </motion.p>\n            )}\n          </form>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n"],"names":["Contact","formData","setFormData","useState","name","email","message","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","handleChange","e","_objectSpread","target","value","_jsx","id","className","children","_jsxs","motion","div","initial","opacity","whileInView","transition","duration","onSubmit","async","preventDefault","Promise","resolve","setTimeout","error","htmlFor","type","onChange","required","rows","button","disabled","concat","whileHover","scale","whileTap","p","animate"],"sourceRoot":""}